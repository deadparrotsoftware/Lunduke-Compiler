S ::= Function S | Function
Function ::= Make id Args linebreak Stmts linebreak Done
Args ::= WithParameters: List | ϵ
List ::= [ ListValues ]
ListValues = string , ListValues | Factor , ListValues | ϵ
Stmts ::= Stmt | Stmts linebreak Stmt
StmtsRest ::= linebreak Stmt StmtsRest | ϵ
Stmt ::= Assn | Ifstmt | Loop | Comment | FunctionCall
Assn ::= id = Arith | id = Comp
FunctionCall ::= id Args | id WithText:string | id WithCode:number
Arith ::= Term ArithRest
ArithRest ::= + Term ArithRest | - Term ArithRest | ϵ
Term ::= Factor TermRest
TermRest ::= * Factor TermRest | / Factor TermRest | mod Factor TermRest | ϵ
Factor ::= id | num
Ifstmt ::= If Comp linebreak Stmts Else Stmts Done
Loop ::= While Comp linebreak Stmts Done
Comp ::= Arith CompOperator Arith | 
CompOperator :: equals | greaterthan | lessthan | notequal

tokens/keywords:
Make
Done
WithParameters:
[
]
,
linebreak = \n
id = \w(\w|\d)+
string = "(\\"|^")+"
num = \d+|\d+.\d+
If
Else
equals = == | Equals
greaterthan = > | GreaterThan
lessthan = < | LessThan
notequal = != | NotEqual
